{"ast":null,"code":"var _jsxFileName = \"/home/asma/dev/medtech-connect-web/Medtech-connect/frontend/src/Components/AdminUI/GroupChats/GroupChatForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Form, Input, DatePicker, Button } from 'antd';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChatForm = ({\n  onSubmit,\n  onCancel,\n  initialData\n}) => {\n  _s();\n  const [form] = Form.useForm();\n  const {\n    groupId\n  } = useParams(); // Get the group ID from the URL to check if in edit mode\n  const isEditMode = !!groupId; // Edit mode if groupId exists\n\n  useEffect(() => {\n    if (initialData) {\n      form.setFieldsValue({\n        groupName: initialData.groupName,\n        description: initialData.description,\n        creationDate: initialData.creationDate ? moment(initialData.creationDate) : null\n      });\n    }\n  }, [initialData, form]);\n  const handleFinish = values => {\n    console.log(\"Group Chat Data:\", values);\n    onSubmit(values);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"groupName\",\n      label: \"Group Chat Name\",\n      rules: [{\n        required: true,\n        message: 'Please enter the group name'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"creationDate\",\n      label: \"Creation Date\",\n      rules: [{\n        required: true,\n        message: 'Please select a creation date'\n      }],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"description\",\n      label: \"Description (Optional)\",\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        placeholder: \"Enter group description\",\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: 10\n        },\n        children: isEditMode ? \"Update\" : \"Validate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onCancel,\n        type: \"default\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupChatForm, \"1aC/mnv0/9SJUe+M81l9DuFcCqg=\", false, function () {\n  return [Form.useForm, useParams];\n});\n_c = GroupChatForm;\nexport default GroupChatForm;\nvar _c;\n$RefreshReg$(_c, \"GroupChatForm\");","map":{"version":3,"names":["React","useEffect","Form","Input","DatePicker","Button","useParams","moment","jsxDEV","_jsxDEV","GroupChatForm","onSubmit","onCancel","initialData","_s","form","useForm","groupId","isEditMode","setFieldsValue","groupName","description","creationDate","handleFinish","values","console","log","layout","onFinish","autoComplete","children","Item","name","label","rules","required","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","width","TextArea","rows","type","htmlType","marginRight","onClick","_c","$RefreshReg$"],"sources":["/home/asma/dev/medtech-connect-web/Medtech-connect/frontend/src/Components/AdminUI/GroupChats/GroupChatForm.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Form, Input, DatePicker, Button } from 'antd';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nconst GroupChatForm = ({ onSubmit, onCancel, initialData }) => {\n  const [form] = Form.useForm();\n  const { groupId } = useParams(); // Get the group ID from the URL to check if in edit mode\n  const isEditMode = !!groupId; // Edit mode if groupId exists\n\n  useEffect(() => {\n    if (initialData) {\n      form.setFieldsValue({\n        groupName: initialData.groupName,\n        description: initialData.description,\n        creationDate: initialData.creationDate ? moment(initialData.creationDate) : null,\n      });\n    }\n  }, [initialData, form]);\n\n  const handleFinish = (values) => {\n    console.log(\"Group Chat Data:\", values);\n    onSubmit(values);\n  };\n\n  return (\n    <Form form={form} layout=\"vertical\" onFinish={handleFinish} autoComplete=\"off\">\n      <Form.Item\n        name=\"groupName\"\n        label=\"Group Chat Name\"\n        rules={[{ required: true, message: 'Please enter the group name' }]}\n      >\n        <Input placeholder=\"Enter group name\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"creationDate\"\n        label=\"Creation Date\"\n        rules={[{ required: true, message: 'Please select a creation date' }]}\n      >\n        <DatePicker style={{ width: '100%' }} />\n      </Form.Item>\n\n      <Form.Item name=\"description\" label=\"Description (Optional)\">\n        <Input.TextArea placeholder=\"Enter group description\" rows={3} />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: 10 }}>\n          {isEditMode ? \"Update\" : \"Validate\"}\n        </Button>\n        <Button onClick={onCancel} type=\"default\">\n          Cancel\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default GroupChatForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}