{"ast":null,"code":"import { GRID_ID_AUTOGENERATED } from \"../features/rows/gridRowsUtils.js\";\n\n/**\n * Get the row id for a given row\n * @param state - The grid state\n * @param {GridRowModel} row - The row to get the id for\n * @returns {GridRowId} The row id\n */\nexport const gridRowIdSelector = (state, row) => {\n  if (GRID_ID_AUTOGENERATED in row) {\n    return row[GRID_ID_AUTOGENERATED];\n  }\n  return state.props.getRowId ? state.props.getRowId(row) : row.id;\n};","map":{"version":3,"names":["GRID_ID_AUTOGENERATED","gridRowIdSelector","state","row","props","getRowId","id"],"sources":["/home/asma/dev/medtech-connect-web/Medtech-connect/frontend/node_modules/@mui/x-data-grid/hooks/core/gridPropsSelectors.js"],"sourcesContent":["import { GRID_ID_AUTOGENERATED } from \"../features/rows/gridRowsUtils.js\";\n\n/**\n * Get the row id for a given row\n * @param state - The grid state\n * @param {GridRowModel} row - The row to get the id for\n * @returns {GridRowId} The row id\n */\nexport const gridRowIdSelector = (state, row) => {\n  if (GRID_ID_AUTOGENERATED in row) {\n    return row[GRID_ID_AUTOGENERATED];\n  }\n  return state.props.getRowId ? state.props.getRowId(row) : row.id;\n};"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,mCAAmC;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC/C,IAAIH,qBAAqB,IAAIG,GAAG,EAAE;IAChC,OAAOA,GAAG,CAACH,qBAAqB,CAAC;EACnC;EACA,OAAOE,KAAK,CAACE,KAAK,CAACC,QAAQ,GAAGH,KAAK,CAACE,KAAK,CAACC,QAAQ,CAACF,GAAG,CAAC,GAAGA,GAAG,CAACG,EAAE;AAClE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}